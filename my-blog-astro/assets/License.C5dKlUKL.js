import{b as createAstro,c as createComponent,r as renderTemplate,m as maybeRenderHead,d as addAttribute,a as renderComponent}from"./astro/server.BJ5FQhcg.js";import{formatDateToYYYYMMDD}from"./date-utils.OyTxlY41.js";import{a as $$Icon}from"./MainGridLayout.Bf7KtL4Q.js";import{i as i18n,I as I18nKey,p as profileConfig,l as licenseConfig}from"./content-utils.BXBaNoMz.js";const $$Astro=createAstro("https://turnip1202.github.io"),$$License=createComponent(((t,e,a)=>{const i=t.createAstro($$Astro,e,a);i.self=$$License;const{title:r,slug:s,pubDate:o}=i.props,n=i.props.class,d=profileConfig,l=licenseConfig,c=decodeURIComponent(i.url.toString());return renderTemplate`${maybeRenderHead()}<div${addAttribute(`relative transition overflow-hidden bg-[var(--license-block-bg)] py-5 px-6 ${n}`,"class")}> <div class="transition font-bold text-black/75 dark:text-white/75"> ${r} </div> <a${addAttribute(c,"href")} class="link text-[var(--primary)]"> ${c} </a> <div class="flex gap-6 mt-2"> <div> <div class="transition text-black/30 dark:text-white/30 text-sm">${i18n(I18nKey.author)}</div> <div class="transition text-black/75 dark:text-white/75 whitespace-nowrap">${d.name}</div> </div> <div> <div class="transition text-black/30 dark:text-white/30 text-sm">${i18n(I18nKey.publishedAt)}</div> <div class="transition text-black/75 dark:text-white/75 whitespace-nowrap">${formatDateToYYYYMMDD(o)}</div> </div> <div> <div class="transition text-black/30 dark:text-white/30 text-sm">${i18n(I18nKey.license)}</div> <a${addAttribute(l.url,"href")} target="_blank" class="link text-[var(--primary)] whitespace-nowrap">${l.name}</a> </div> </div> ${renderComponent(t,"Icon",$$Icon,{name:"fa6-brands:creative-commons",class:"transition text-[15rem] absolute pointer-events-none right-6 top-1/2 -translate-y-1/2 text-black/5 dark:text-white/5"})} </div>`}),"D:/ACode/A_Code/Project/v1/BlogGitPage/my-blog-app/src/components/misc/License.astro",void 0),$$file="D:/ACode/A_Code/Project/v1/BlogGitPage/my-blog-app/src/components/misc/License.astro",$$url=void 0;export{$$License as default,$$file as file,$$url as url};