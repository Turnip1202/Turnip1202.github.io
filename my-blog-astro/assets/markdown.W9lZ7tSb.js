import{c as createComponent,r as renderTemplate,m as maybeRenderHead,u as unescapeHTML}from"./astro/server.BJ5FQhcg.js";const html='<section><h1 id="an-h1-header">An h1 header<a class="anchor" href="#an-h1-header"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1><p>Paragraphs are separated by a blank line.</p><p>2nd paragraph. <em>Italic</em>, <strong>bold</strong>, and <code>monospace</code>. Itemized lists\nlook like:</p><ul>\n<li>this one</li>\n<li>that one</li>\n<li>the other one</li>\n</ul><p>Note that --- not considering the asterisk --- the actual text\ncontent starts at 4-columns in.</p><blockquote>\n<p>Block quotes are\nwritten like so.</p>\n<p>They can span multiple paragraphs,\nif you like.</p>\n</blockquote><p>Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all\nin chapters 12—14”). Three dots … will be converted to an ellipsis.\nUnicode is supported. ☺</p><section><h2 id="an-h2-header">An h2 header<a class="anchor" href="#an-h2-header"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2><p>Here’s a numbered list:</p><ol>\n<li>first item</li>\n<li>second item</li>\n<li>third item</li>\n</ol><p>Note again how the actual text starts at 4 columns in (4 characters\nfrom the left side). Here’s a code sample:</p><pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span># Let me re-iterate ...</span></span>\n<span class="line"><span>for i in 1 .. 10 { do-something(i) }</span></span>\n<span class="line"><span></span></span></code></pre><p>As you probably guessed, indented 4 spaces. By the way, instead of\nindenting the block, you can use delimited blocks, if you like:</p><pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span>define foobar() {</span></span>\n<span class="line"><span>    print "Welcome to flavor country!";</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span></span></span></code></pre><p>(which makes copying &#x26; pasting easier). You can optionally mark the\ndelimited block for Pandoc to syntax highlight it:</p><pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="python"><code><span class="line"><span style="color:#F97583">import</span><span style="color:#E1E4E8"> time</span></span>\n<span class="line"><span style="color:#6A737D"># Quick, count to ten!</span></span>\n<span class="line"><span style="color:#F97583">for</span><span style="color:#E1E4E8"> i </span><span style="color:#F97583">in</span><span style="color:#79B8FF"> range</span><span style="color:#E1E4E8">(</span><span style="color:#79B8FF">10</span><span style="color:#E1E4E8">):</span></span>\n<span class="line"><span style="color:#6A737D">    # (but not *too* quick)</span></span>\n<span class="line"><span style="color:#E1E4E8">    time.sleep(</span><span style="color:#79B8FF">0.5</span><span style="color:#E1E4E8">)</span></span>\n<span class="line"><span style="color:#79B8FF">    print</span><span style="color:#E1E4E8"> i</span></span>\n<span class="line"></span></code></pre><section><h3 id="an-h3-header">An h3 header<a class="anchor" href="#an-h3-header"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3><p>Now a nested list:</p><ol>\n<li>\n<p>First, get these ingredients:</p>\n<ul>\n<li>carrots</li>\n<li>celery</li>\n<li>lentils</li>\n</ul>\n</li>\n<li>\n<p>Boil some water.</p>\n</li>\n<li>\n<p>Dump everything in the pot and follow\nthis algorithm:</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="plaintext"><code><span class="line"><span> find wooden spoon</span></span>\n<span class="line"><span> uncover pot</span></span>\n<span class="line"><span> stir</span></span>\n<span class="line"><span> cover pot</span></span>\n<span class="line"><span> balance wooden spoon precariously on pot handle</span></span>\n<span class="line"><span> wait 10 minutes</span></span>\n<span class="line"><span> goto first step (or shut off burner when done)</span></span>\n<span class="line"><span></span></span></code></pre>\n<p>Do not bump wooden spoon or it will fall.</p>\n</li>\n</ol><p>Notice again how text always lines up on 4-space indents (including\nthat last line which continues item 3 above).</p><p>Here’s a link to <a href="http://foo.bar">a website</a>, to a <a href="local-doc.html">local\ndoc</a>, and to a <a href="#an-h2-header">section heading in the current\ndoc</a>. Here’s a footnote <sup><a href="#user-content-fn-1" id="user-content-fnref-1" data-footnote-ref="" aria-describedby="footnote-label">1</a></sup>.</p><p>Tables can look like this:</p><p>size material color</p><hr><p>9 leather brown\n10 hemp canvas natural\n11 glass transparent</p><p>Table: Shoes, their sizes, and what they’re made of</p><p>(The above is the caption for the table.) Pandoc also supports\nmulti-line tables:</p><hr><p>keyword text</p><hr><p>red Sunsets, apples, and\nother red or reddish\nthings.</p><p>green Leaves, grass, frogs\nand other things it’s\nnot easy being.</p><hr><p>A horizontal rule follows.</p><hr><p>Here’s a definition list:</p><p>apples\n: Good for making applesauce.\noranges\n: Citrus!\ntomatoes\n: There’s no “e” in tomatoe.</p><p>Again, text is indented 4 spaces. (Put a blank line between each\nterm/definition pair to spread things out more.)</p><p>Here’s a “line block”:</p><p>| Line one\n| Line too\n| Line tree</p><p>and images can be specified like so:</p><p>Inline math equations go in like so: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ω</mi><mo>=</mo><mi>d</mi><mi>ϕ</mi><mi mathvariant="normal">/</mi><mi>d</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\\omega = d\\phi / dt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">ϕ</span><span class="mord">/</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span></span></span></span>. Display\nmath should get its own line and be put in in double-dollarsigns:</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo>=</mo><mo>∫</mo><mi>ρ</mi><msup><mi>R</mi><mn>2</mn></msup><mi>d</mi><mi>V</mi></mrow><annotation encoding="application/x-tex">I = \\int \\rho R^{2} dV</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1202em;vertical-align:-0.3061em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ρ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span></p><p>And note that you can backslash-escape any punctuation characters\nwhich you wish to be displayed literally, ex.: `foo`, *bar*, etc.</p></section></section></section>\n<section data-footnotes="" class="footnotes"><h2 class="sr-only" id="footnote-label">Footnotes<a class="anchor" href="#footnote-label"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ol>\n<li id="user-content-fn-1">\n<p>Footnote text goes here. <a href="#user-content-fnref-1" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref">↩</a></p>\n</li>\n</ol>\n</section>',frontmatter={title:"Markdown Example",published:"2023-10-01T00:00:00.000Z",description:"A simple example of a Markdown blog post.",tags:["Markdown","Blogging","Demo"],category:"Examples",draft:!1,minutes:2,words:439,excerpt:"Paragraphs are separated by a blank line."},file="D:/ACode/A_Code/Project/v1/BlogGitPage/my-blog-app/src/content/posts/markdown.md",url=void 0;function rawContent(){return"\n# An h1 header\n\nParagraphs are separated by a blank line.\n\n2nd paragraph. _Italic_, **bold**, and `monospace`. Itemized lists\nlook like:\n\n- this one\n- that one\n- the other one\n\nNote that --- not considering the asterisk --- the actual text\ncontent starts at 4-columns in.\n\n> Block quotes are\n> written like so.\n>\n> They can span multiple paragraphs,\n> if you like.\n\nUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\nin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\nUnicode is supported. ☺\n\n## An h2 header\n\nHere's a numbered list:\n\n1. first item\n2. second item\n3. third item\n\nNote again how the actual text starts at 4 columns in (4 characters\nfrom the left side). Here's a code sample:\n\n    # Let me re-iterate ...\n    for i in 1 .. 10 { do-something(i) }\n\nAs you probably guessed, indented 4 spaces. By the way, instead of\nindenting the block, you can use delimited blocks, if you like:\n\n```\ndefine foobar() {\n    print \"Welcome to flavor country!\";\n}\n```\n\n(which makes copying & pasting easier). You can optionally mark the\ndelimited block for Pandoc to syntax highlight it:\n\n```python\nimport time\n# Quick, count to ten!\nfor i in range(10):\n    # (but not *too* quick)\n    time.sleep(0.5)\n    print i\n```\n\n### An h3 header\n\nNow a nested list:\n\n1. First, get these ingredients:\n\n    - carrots\n    - celery\n    - lentils\n\n2. Boil some water.\n\n3. Dump everything in the pot and follow\n    this algorithm:\n\n        find wooden spoon\n        uncover pot\n        stir\n        cover pot\n        balance wooden spoon precariously on pot handle\n        wait 10 minutes\n        goto first step (or shut off burner when done)\n\n    Do not bump wooden spoon or it will fall.\n\nNotice again how text always lines up on 4-space indents (including\nthat last line which continues item 3 above).\n\nHere's a link to [a website](http://foo.bar), to a [local\ndoc](local-doc.html), and to a [section heading in the current\ndoc](#an-h2-header). Here's a footnote [^1].\n\n[^1]: Footnote text goes here.\n\nTables can look like this:\n\nsize material color\n\n---\n\n9 leather brown\n10 hemp canvas natural\n11 glass transparent\n\nTable: Shoes, their sizes, and what they're made of\n\n(The above is the caption for the table.) Pandoc also supports\nmulti-line tables:\n\n---\n\nkeyword text\n\n---\n\nred Sunsets, apples, and\nother red or reddish\nthings.\n\ngreen Leaves, grass, frogs\nand other things it's\nnot easy being.\n\n---\n\nA horizontal rule follows.\n\n---\n\nHere's a definition list:\n\napples\n: Good for making applesauce.\noranges\n: Citrus!\ntomatoes\n: There's no \"e\" in tomatoe.\n\nAgain, text is indented 4 spaces. (Put a blank line between each\nterm/definition pair to spread things out more.)\n\nHere's a \"line block\":\n\n| Line one\n| Line too\n| Line tree\n\nand images can be specified like so:\n\n[//]: # (![example image]&#40;./demo-banner.png \"An exemplary image\"&#41;)\n\nInline math equations go in like so: $\\omega = d\\phi / dt$. Display\nmath should get its own line and be put in in double-dollarsigns:\n\n$$I = \\int \\rho R^{2} dV$$\n\nAnd note that you can backslash-escape any punctuation characters\nwhich you wish to be displayed literally, ex.: \\`foo\\`, \\*bar\\*, etc.\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"an-h1-header",text:"An h1 header#"},{depth:2,slug:"an-h2-header",text:"An h2 header#"},{depth:3,slug:"an-h3-header",text:"An h3 header#"},{depth:2,slug:"footnote-label",text:"Footnotes#"}]}const Content=createComponent(((n,a,e)=>{const{layout:s,...t}=frontmatter;return t.file=file,t.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};